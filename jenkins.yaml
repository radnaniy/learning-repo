credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          description: "aws bams artifactory"
          id: "s.tmsdevops.bams"
          password: "{AQAAABAAAAAQ44mi0enHnNO2GA5z7FkuHDlyluwVvxYBDmM63WnyqDg=}"
          scope: GLOBAL
          username: "s.tmsdevops.bams"
      - usernamePassword:
          description: "sami git"
          id: "s.TMS.DEVOPSGITUSER"
          password: "{AQAAABAAAAAQnSlOAHD7ou6lXpKq8Dcu3i5KjcW2JeuseM9RKTOG9U8=}"
          scope: GLOBAL
          username: "s.TMS.DEVOPSGITUSER"
      - gitLabApiTokenImpl:
          apiToken: "{AQAAABAAAAAgbNpvjMN+w6PaeMT5XoiF3nMrKekGuNkwsFO4yXHK72JGHebYoVi4kLeRMlqqhxxL}"
          description: "gitlab api token"
          id: "sami.git.token"
          scope: GLOBAL
      - string:
          description: "slack token"
          id: "slack.token"
          scope: GLOBAL
          secret: "{AQAAABAAAAAgNiV8/i73bPnUdXhovRnaIJypYIUdDHMIgQCIioK0qz/ZoWg8+Ks8UphkI9wDDUDD}"
      - string:
          description: "clfadmin nonprod password"
          id: "clfadmin-nonprod"
          scope: GLOBAL
          secret: "{AQAAABAAAAAQ+AMwiPREmkLURskSX/JTLYMYJpjcRxIdPhXcJm5Ixfg=}"
      - string:
          description: "clfadmin prod password"
          id: "clfadmin-prod"
          scope: GLOBAL
          secret: "{AQAAABAAAAAQzerR3dKlFb2qoi7IKB52V4IWjT4dAomTHbK605mfh6k=}"
      - usernamePassword:
          description: "jenkins docker slave ssh"
          id: "jenkins-slave-ssh"
          password: "{AQAAABAAAAAQZO6GCJ6MQeyESCKH1s6GVpOhE4tYm/O6y2RqageutUI=}"
          scope: SYSTEM
          username: "jenkins"
      - usernamePassword:
          description: "devops webdav dtc repo"
          id: "DEVOPS_REPO"
          password: "{AQAAABAAAAAQybDj4cdvzWFm5EFz8BMwQkPuEoPLDmhEMjxPgmCqSxw=}"
          scope: GLOBAL
          username: "tmsdevops"
      - usernamePassword:
          description: "BAMS HTTPS Creds"
          id: "Bams_Creds_HTTPS"
          password: "{AQAAABAAAAAQv7REoVAIw1z7WvoC2PliNo5EpLRke1T4AoWQQpw6V/4=}"
          scope: GLOBAL
          username: "s.tms.jenkins"
      - basicSSHUserPrivateKey:
          id: "Jenkins-Slave-Centos5"
          privateKeySource:
            directEntry:
              privateKey: "{AQAAABAAAAaQXaL9hOfp7PVLU5cLdwqv/+jkx6pdlkNxjuHvFm9ZUQRs9bvOMbZyi97Si8uf8j0gb0nJQvI0l+JfmPkH7VOWRAr/e+/sSoofUwnRVT2lN6IWdEGXLDxEeuhqeqq05+C1BUqN2yQFEild5V77GXPPNq3Ys7nBDBDsQNs4djaPyddWlLOoD32Nrjxzmi6sKQKT7iVNZnH5BS3NnWD7AP1iLyjA47/w+PtaeWia3ywjIQyeziuHqKwDH8Lq/gN7obqHrM4DexE9EosM5lacaHHSMAG0iNM/Lw2ExAmqgnMzer8S3aj1XIR2xes/6bQvurpojhOHbwN75m8eiRBIa1uXtbsFu9evTYWXP22KNzrmDRo165V6VtRiXswBCpPEeZ0D9Aywml0vTkFN9kObW588kuhoESWN7tGmQG9UcDulUzdr+xDHwOn3EuhQbvU5h6dSBqqdmAUjNvfr/uByVflO9NsVOdCUw6v4wxTCIDMsPWoy0akk/5Ql+wFFlpX0FtFCmr0pexwYO1gbRxQEC9Y8NU0YwlKrjH31cl+QNbwmqHaNmU2Mv6s+9DQoilNYwRZHDFZCzTDBVbMJpMFwKtO1NZHL5CkavY9NVJFoCeTvgiD6uLShZXJhLIZ8lqcaSNG7Y27JDrtMeBvhUGqXRZZvsGHwHiOU1S8WwG8e9cAIDB5kFJ9WYlF8Vk3eH+s2Zgr1oKlfwcl//p5ARzRFuZz3yjNBai9c2ErqagaihatFBTjMoPVzCu3kRdwwfok3Et2/RYy0G1jI1bc9mU/8QmxTj5GPixzyupxvDQjlirut00AYnBw3bsJgIPwNC/f1m7o58TzY0EsxMAYG8tOBJBxQTlbZ7Ox7mdgDUdAffMiLL5PVf11iz7h5Vmkpcvg6hclxS3ofjrjWmRDsJry3ZDCr1IabU7wlyWYrGt3FbeN3kNrdrJHCVxj9bMfa3in1xWm0MD3Y+LngKsQXrsJVN1mOquUqv9G6/KkTlUUAtexWF2WU5/1j5fVlp8jq8IZCQPScLYoFZ4CyuevAC/VVM+Pg2Xq8jKmpovP3ClHE38/n1pSdihFHuorGcXbl2yvCn0Xn9A0S2TRm5Be3hfKxeXtkQcbULRVCckJLgvoB6fD25rqlIpkYLjmlcCDFy9+1ab4uxNmJRbwe28ISUD/VAfjGu7+mp6AOfaFG9zTzdK4OMS6843FUvFdRShnl4DJYxk/dtEbIICfHngEiYukV+os9UdZ09zZxfQo4RvF/wuCWAGKF/IehT5ELll1B/ZELVTbkErCEcQYJlNUtC7QqDji2x2+mBcLLAnB2YsjBCcKNZ2/7JpNUn7xnOfYVSATyCeXCWy8RtgTtVSTFDFulow6ZnVyecTg2UuiHHn3KYa+LsO/jHdAFY3odnIyd3MF2mEOESzNY6jIrFnbD5DjFwgsI2i5BFCc+4bNMxiU4aASszanBsKemjuFNCkXNlJbeSGhvFoeFjiiukwp0Xe1/lZxd/HQoT3OwEYdm0zwrpIOCTQ8YEnMqaninfpDrVUh6ZVOz2z3CeoOFcD3q6BYCI6JDnNRe5nIakWQx6U+uz8R7SzL8hyO459/ypnv/fxVt6BKioFk8mynPLCWMvT4unxP37J3FfLF1P2o7aHJCXC8mvrXtXN1s0ZQH/R4gGgGklGXJAYlrmdvYsJjBGUiYgqkXBnfwd9W03K54KTsLUdtG20TgLM5njEkXh85+oJz/d34HBAfA4vQ9X4kxzhAt83bcqBrXkHJvoiOTP9c0w1cbO5VA7/lj8ir3Fm2bFSg1AFG3ufsOtUPer+cBOWFyptA425ZYskfOHZDoSlDzohjFcSLqRnEytMrcXRqDtd2KoQXVHJFilg3YWMQic/14vUsfDQqieox2FVjJwrn/oWeXQSCp3t8WQH8Lx/y2rjCkH+7Ba/DfQYrlYmaEFdSnJHu3vWcG0co4iBA4aeN1BuSwTfbDo7YXL/TpiDfUizeGZPz3g3FXdXyR2SkVo/GgJVtIU/h/sTdnxRLFr6K2E/QAS0D5k/N+a8FFmJz9LUwQBS8fgOqPy50WJft2qZJ4d3LLW+mUIOP/qdWE4nkiO0oGQQNle9Nlml9Rgqt33OBWoytSVF+xpf0quEAsoGN1/7RbeAraSQ8GXZweMqoKCCNYSVLRRypYC1azGVlWzG/Orb2WfSGPZbjhbEFk8dooAV5eFZyB5otlWoGftZg5YREpEY4u3C7cqctGGeCX4nYh7SFhJ0sBBoDUEs+aC55zVwYGfA==}"
          scope: GLOBAL
          username: "s.tms.jenkins"
      - dockerServer:
          clientCertificate: |-
            -----BEGIN CERTIFICATE-----
            MIIFcjCCA1qgAwIBAgIJALa0f1s/xxEDMA0GCSqGSIb3DQEBCwUAMIGjMQswCQYD
            VQQGEwJHQjEPMA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEjAQBgNV
            BAoMCVJlZmluaXRpdjEMMAoGA1UECwwDVE1TMS0wKwYDVQQDDCRjOTAzZ3d1dnp2
            MDM1LmludC50aG9tc29ucmV1dGVycy5jb20xITAfBgkqhkiG9w0BCQEWEmNsZmhl
            bHBkZXNrQHRyLmNvbTAeFw0xOTAyMDMwOTM3NDVaFw0yMjA1MTgwOTM3NDVaMDQx
            MjAwBgNVBAMMKWplbmtpbnMtZHRjLXRtc29wcy5pbnQudGhvbXNvbnJldXRlcnMu
            Y29tMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxarkJn6uljwyIPSS
            9BH98hO+y3qI7KEChZ4wKAP4CF4dL7CEpJHhHZh0+Ygqo0h4JE787IN9UdTP4uJY
            adqc1uktc/0atgNHHeweFi79NdnTEKoPCB5w14fzA7/lXmksCAqC2wvgmvridaW5
            hhoFosQBvHeN+frIAs2xR/ddX+kwUukiUlr/hhbwoy4Pc+11Soor0kils18mNHn9
            YatXCvVVRrl58oJ4CL49S6qYXHa6uIk0eFFUXn7jHcZM5OW1aOEWwWU8HhSmJtNX
            J/xg1xk+gkc9VfAsVldOSESq9WugURgvulYDWLgWKzLJMOLtcoGNQdkfNVC9lG/B
            kTJ6r026caaf6shT80xNyaUN6CShUakNMTtu2YxTDNWevn4nD3XUFGFjn53WTdHo
            VNntGamyeLp8kTJWihPu7RbREXXcVQLaaCTXCtZ+6d8vYWFKwCDl44z40KEmTH3v
            bNu9qlHOQb9fXB2uD3nA9Vmdqan0SjsbefHUb6EbSmUTSm7G4+eSRN+EDv7lInxk
            fpRLu+soCTNb14/hRNSUtup7VNB9uBbLHQpIgqI5G6ozM0GQMc0A0UTCMu7k+6Wb
            qtq+ohYAwgmu8W2OwnutbbzN9N+f9ky34k4DlRA3pGqj1aUk2rrq+hWCmNbA+r01
            d99RXiMKGQ8pdVaz2/i46JNv4q8CAwEAAaMXMBUwEwYDVR0lBAwwCgYIKwYBBQUH
            AwIwDQYJKoZIhvcNAQELBQADggIBAH8KOoZ1ulMVAqhQGYZYu2Sv3BL3mZmYdALd
            RU9hatUGnnnOUQ5mR2M+Q0wQTEV8/4RPqPlMz+XZeAo5bYlwFcDs+Jn1K+DJLISv
            wfkUl49Ry1uMtFX9G2o0graeAAqL9D/KuJM5SP8ZwXfx/77p62i1UsfmdYbfSbXN
            hHp9j19mPzdT5AQ8IjrkcZNfBFHf8yv5YEYFhsUW0Menq+Cj35baYSBB8jDVsFfi
            Pn4Og2iy6BqjqWmgVFW98Q8J87mDlbADsoHEcqNL3hB4xDhgUp5CqcZPLfILTdoQ
            FP4VYbdIwQ2VoOr/dRzmzwjC8WTMyVfkqyvNsbo2v6xCQU50IYRWOT+W/uz6YDN6
            ietNMrl4MOEUrOVEB932t+ojxuTGnpQ6jlCtOY+Va+3x2HdtOI2CMbw8bf10Nu7J
            scOYiFhQdG3flxGk4gS/VrvOjWMUDWpQPUW5YTo0RycTFABU+O/hSFVqcnjCcjD6
            LHPfW5ecurEVWX89YkkxVwhDa5Ca16B/qsj+JjIJb6FcC3z/NILlsnOOwclh4Dyt
            4dKSyiyvQuohi7Z+Y9e3cetgHeVCb1nkGpiuBcp91hfKOFkG4wCIl78VDEdVWjuw
            fuFMus1TtPkG6BZ5ko1sTaLPP6lBkD/0wNKq3bV3rFG9IaH6TuaNZJ1BzAK6c2cA
            /MmRZdAU
            -----END CERTIFICATE-----
          clientKeySecret: "{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}"
          description: "c903gwuvzv035.int.thomsonreuters.com"
          id: "c903gwuvzv035.int.thomsonreuters.com"
          scope: SYSTEM
          serverCaCertificate: |-
            -----BEGIN CERTIFICATE-----
            MIIGGzCCBAOgAwIBAgIJANASBR/NHpvwMA0GCSqGSIb3DQEBCwUAMIGjMQswCQYD
            VQQGEwJHQjEPMA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEjAQBgNV
            BAoMCVJlZmluaXRpdjEMMAoGA1UECwwDVE1TMS0wKwYDVQQDDCRjOTAzZ3d1dnp2
            MDM1LmludC50aG9tc29ucmV1dGVycy5jb20xITAfBgkqhkiG9w0BCQEWEmNsZmhl
            bHBkZXNrQHRyLmNvbTAeFw0xOTAyMDMwOTM1MTBaFw0yMjA1MTgwOTM1MTBaMIGj
            MQswCQYDVQQGEwJHQjEPMA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24x
            EjAQBgNVBAoMCVJlZmluaXRpdjEMMAoGA1UECwwDVE1TMS0wKwYDVQQDDCRjOTAz
            Z3d1dnp2MDM1LmludC50aG9tc29ucmV1dGVycy5jb20xITAfBgkqhkiG9w0BCQEW
            EmNsZmhlbHBkZXNrQHRyLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
            ggIBAKc3PewXlxJwGgnICLThFvTvRUWmZvQxuVsucJ4IudvzOSXCZvdDNhxNECgm
            e/Coavn3ism9KDp81ipJ5kMp16trk61E3DGxYhFuch15O9cGgVg30toQ17fSirBi
            z6K/VM8+XxjpABjkqJYraXWTz+bdXebO+gxAqF9q8VN8O9bo20iV3o4z8ZR7PDmF
            +7IsbQcxkxe9ckpMHrxHXJF8liaSDNUQW+d2yrEtvs/4ff/7gvGDsaxB9msS06/j
            r8GtZBRDngTSiZDOKoVtc+D+ngWcT0unf1cKYY5i1T3umTXYyebh0ChQdKbmuFw+
            MGxx38N5KrktHFtvieFoxbjkGmlHGAvdVJSk1W198+mevqmRYGRVz+Bz2+Sn2nWo
            7qNWAYg1RsTnOfp5VXACAOlOuiAP9ndTpVDjUBTrtWfInHTAedpnRHYqsv5rMVy+
            GLBKfAQM33FrXI9v/81HXFGHfde1ECUKLBmAO0TVdrkXkLj2Tu0fa4wAmdPYU8A0
            xGdoWJOEOabSo14MDIIyCdYMGJF4kA3KT42fEy4MkifeHIC2hyB3wWru1sfxqB6y
            NBeefaiQbeSmGnEU3byYlhkjW9TWjGB6fm7S9h/07wu20f7KHPwoiBK+n3MwCr8N
            dHFG5nklDH1XHU3Nz9i7nYhDhE4QqbypdmPXNjCzLFIkcRF/AgMBAAGjUDBOMB0G
            A1UdDgQWBBSvVSriw1kd4AOjuPX6R1/cicrBqjAfBgNVHSMEGDAWgBSvVSriw1kd
            4AOjuPX6R1/cicrBqjAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4ICAQAo
            JHQw++Zx+L2jvn9GFY3O4XsCGl8vrO6C3GQEdda8HPxCuituWf8hLw961NjGi+KQ
            1QQnyJ1qcILCJEkFnf6Ab5n7F5UPtLVdC+m1HEB9FcPuERAMmwjQvsDgpZCXBt3e
            zCcmcpk6/UAnu+R2K/pJ1NM2Y1LbsODJJP7BhfhNT0goOVZQJPQcE33r/g5u/Cgg
            6u/0cDGehtUZQSsH3Ebw2YSezuKt3rmPrmnStTAhIAuWlTssAwmACbsSDDDNIsZl
            WbU5wlp06B4B+oOfRbdRQz/MmZE0bxfqFYThP6sUjqg0+NOuKoaAxOxqmXF93Emi
            Kqkd8WRYbDee0XyBJtZM7DF72ipuYhASqhTu2RAxN13aWHyYm5tKX43AZrW6+dD0
            S2Ztjta2t5EZADHesb25DRfPkURL3XCzzJIoNlTSX0rXvYvcTuh5n6UlQIpFXWpm
            7fC3F4Mmes2nbpHcNe7ueEBiHYzB1y5imuL9/Y8lBZ6VG5qKXRgLPuQ3LbEVa+6Z
            cRzlnualIT/X/Bhv063P8eDr/zPFPaESdh+2QaZAf+cDcA5S3Ql9c+3h09IZxwbJ
            KU0x+Ja+mJjcroQLmaSrkNIJ0nsO8vyZgmCInB84ACbKzz55xOtZ2i3VeL5sf9by
            95rDeK06V/m/4kfZlsdli8mptUDhOfkc+wUeUOZl3w==
            -----END CERTIFICATE-----
      - aws:
          accessKey: "AKIASQHFVMQN7XEL5MYU"
          description: "a205875-trit-ppe-sa"
          id: "a205875-trit-ppe-sa"
          scope: GLOBAL
          secretKey: "{AQAAABAAAAAwbY/qEHsI9Rgu1LwQArMOUYnMhAfYL4Khgu7WCFJjQa8OUolqKdUeT6f8zq2Owl4CL7enWtr/+sYCABdkrxNT1w==}"
      - aws:
          accessKey: "AKIA22UKEN3JUITOII6F"
          description: "a205875-trit-prod-sa"
          id: "a205875-trit-prod-sa"
          scope: GLOBAL
          secretKey: "{AQAAABAAAAAwY+Va/a3E2cjjOXOV8Su38sd4S62l4t+sxrXIqqZ7MaXPD1A+TDJ60eIVCbC8DF8y0/aDWpZ352M+4X1vRCD0dg==}"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    globalMatrix:
      permissions:
      - "Job/Build:-DG-APP-TMSTECH-DEV"
      - "Job/Build:s.tms.jenkins"
      - "Job/Cancel:-DG-APP-TMSTECH-DEV"
      - "Job/Discover:-DG-APP-TMSTECH-DEV"
      - "Job/Read:-DG-APP-TMSTECH-DEV"
      - "Job/Read:authenticated"
      - "Job/Workspace:-DG-APP-TMSTECH-DEV"
      - "Overall/Administer:-DG-APP-TMSTECH-DEVOPS"
      - "Overall/Administer:andrey.evtikhov"
      - "Overall/Administer:andrii.pavlenko1"
      - "Overall/Administer:dmytro.trofimchuk_rft"
      - "Overall/Administer:igor.koshevy"
      - "Overall/Administer:maksym.zhovanyk"
      - "Overall/Administer:moshayov.eran"
      - "Overall/Administer:oleksandr.radnianiy_rft"
      - "Overall/Administer:roman.firsov"
      - "Overall/Administer:vladimir.rozhavsky"
      - "Overall/Read:-DG-APP-TMSTECH-DEV"
      - "Overall/Read:authenticated"
      - "Run/Delete:-DG-APP-TMSTECH-DEV"
      - "Run/Replay:-DG-APP-TMSTECH-DEV"
      - "Run/Update:-DG-APP-TMSTECH-DEV"
      - "View/Read:authenticated"
  clouds:
  - docker:
      containerCap: 20
      dockerApi:
        connectTimeout: 60
        dockerHost:
          credentialsId: "c903gwuvzv035.int.thomsonreuters.com"
          uri: "tcp://c903gwuvzv035.int.thomsonreuters.com:4243"
        readTimeout: 60
      name: "c903gwuvzv035.int.thomsonreuters.com"
      templates:
      - connector:
          ssh:
            sshKeyStrategy:
              manuallyConfiguredSSHKey:
                credentialsId: "jenkins-slave-ssh"
                sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
        dockerTemplateBase:
          cpuPeriod: 0
          cpuQuota: 0
          image: "bams-aws.int.thomsonreuters.com:5001/tmsdevops/jnk-slaves/navalia-jenkins-docker-slave-centos7-mvn:1.1-pod"
          privileged: true
          volumes:
          - "/home/clfadmin:/home/jenkins"
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/usr/bin/docker:/usr/bin/docker"
          - "/clfmnt/data/jenkins-slave:/mnt/data"
          volumesString: |-
            /home/clfadmin:/home/jenkins
            /var/run/docker.sock:/var/run/docker.sock
            /usr/bin/docker:/usr/bin/docker
            /clfmnt/data/jenkins-slave:/mnt/data
        instanceCapStr: "20"
        labelString: "docker-slave-centos7-mvn"
        remoteFs: "/mnt/data"
        stopTimeout: 0
      - connector:
          ssh:
            sshKeyStrategy:
              manuallyConfiguredSSHKey:
                credentialsId: "jenkins-slave-ssh"
                sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
        dockerTemplateBase:
          cpuPeriod: 0
          cpuQuota: 0
          environment:
          - "NO_PROXY=localhost,127.0.0.1,*.thomsonreuters.com,nexus-tms,thomsonreuters.com,sami.int.thomsonreuters.com,*.sami.int.thomsonreuters.com"
          environmentsString: "NO_PROXY=localhost,127.0.0.1,*.thomsonreuters.com,nexus-tms,thomsonreuters.com,sami.int.thomsonreuters.com,*.sami.int.thomsonreuters.com"
          image: "bams-aws.int.thomsonreuters.com:5001/tmsdevops/jnk-slaves/navalia-jenkins-docker-slave-centos7:1.1-pod"
          privileged: true
          volumes:
          - "/home/clfadmin:/home/jenkins"
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/usr/bin/docker:/usr/bin/docker"
          - "/clfmnt/data/jenkins-slave:/mnt/data"
          volumesString: |-
            /home/clfadmin:/home/jenkins
            /var/run/docker.sock:/var/run/docker.sock
            /usr/bin/docker:/usr/bin/docker
            /clfmnt/data/jenkins-slave:/mnt/data
        instanceCapStr: "20"
        labelString: "docker-slave-centos7"
        nodeProperties:
        - envVars:
            env:
            - key: "NO_PROXY"
              value: "localhost,127.0.0.1,*.thomsonreuters.com,nexus-tms,thomsonreuters.com,sami.int.thomsonreuters.com,*.sami.int.thomsonreuters.com"
        remoteFs: "/mnt/data"
        stopTimeout: 0
      - connector:
          ssh:
            sshKeyStrategy:
              manuallyConfiguredSSHKey:
                credentialsId: "jenkins-slave-ssh"
                sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
        dockerTemplateBase:
          cpuPeriod: 0
          cpuQuota: 0
          image: "bams-aws.int.thomsonreuters.com:5001/tmsdevops/jnk-slaves/alpine:3.10.0-pod"
          privileged: true
          volumes:
          - "/home/clfadmin:/home/jenkins"
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/usr/bin/docker:/usr/bin/docker"
          - "/clfmnt/data/jenkins-slave:/mnt/data"
          volumesString: |-
            /home/clfadmin:/home/jenkins
            /var/run/docker.sock:/var/run/docker.sock
            /usr/bin/docker:/usr/bin/docker
            /clfmnt/data/jenkins-slave:/mnt/data
        instanceCapStr: "20"
        labelString: "docker-alpine-python"
        nodeProperties:
        - envVars:
            env:
            - key: "NO_PROXY"
              value: "localhost,127.0.0.1,*.thomsonreuters.com,nexus-tms,thomsonreuters.com,sami.int.thomsonreuters.com,*.sami.int.thomsonreuters.com"
        remoteFs: "/mnt/data"
        stopTimeout: 0
      - connector:
          ssh:
            sshKeyStrategy:
              manuallyConfiguredSSHKey:
                credentialsId: "jenkins-slave-ssh"
                sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
        dockerTemplateBase:
          bindAllPorts: true
          bindPorts: "8080:5900"
          cpuPeriod: 0
          cpuQuota: 0
          image: "bams-aws.int.thomsonreuters.com:5001/tmsdevops/jnk-slaves/alpine:3.9-packer"
          privileged: true
          pullCredentialsId: "s.tmsdevops.bams"
          volumes:
          - "/home/clfadmin:/home/jenkins"
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/usr/bin/docker:/usr/bin/docker"
          - "/clfmnt/data/jenkins-slave:/mnt/data"
          - "/lib/modules:/lib/modules"
          volumesString: |-
            /home/clfadmin:/home/jenkins
            /var/run/docker.sock:/var/run/docker.sock
            /usr/bin/docker:/usr/bin/docker
            /clfmnt/data/jenkins-slave:/mnt/data
            /lib/modules:/lib/modules
        instanceCapStr: "20"
        labelString: "packer"
        name: "docker-packer"
        pullStrategy: PULL_ALWAYS
        remoteFs: "/mnt/data"
        stopTimeout: 0
      - connector:
          ssh:
            sshKeyStrategy:
              manuallyConfiguredSSHKey:
                credentialsId: "jenkins-slave-ssh"
                sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
        dockerTemplateBase:
          cpuPeriod: 0
          cpuQuota: 0
          environment:
          - "NO_PROXY=localhost,127.0.0.1,*.thomsonreuters.com,nexus-tms,thomsonreuters.com,sami.int.thomsonreuters.com,*.sami.int.thomsonreuters.com"
          environmentsString: "NO_PROXY=localhost,127.0.0.1,*.thomsonreuters.com,nexus-tms,thomsonreuters.com,sami.int.thomsonreuters.com,*.sami.int.thomsonreuters.com"
          image: "bams-aws.int.thomsonreuters.com:5001/tmsdevops/jnk-slaves/navalia-jenkins-docker-slave-centos6:1"
          pullCredentialsId: "Bams_Creds_HTTPS"
          volumes:
          - "/home/clfadmin:/home/jenkins"
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/usr/bin/docker:/usr/bin/docker"
          - "/clfmnt/data/jenkins-slave:/mnt/data"
          volumesString: |-
            /home/clfadmin:/home/jenkins
            /var/run/docker.sock:/var/run/docker.sock
            /usr/bin/docker:/usr/bin/docker
            /clfmnt/data/jenkins-slave:/mnt/data
        instanceCapStr: "20"
        labelString: "docker-slave-centos6"
        mode: EXCLUSIVE
        name: "docker-centos-6"
        nodeProperties:
        - envVars:
            env:
            - key: "NO_PROXY"
              value: "localhost,127.0.0.1,*.thomsonreuters.com,nexus-tms,thomsonreuters.com,sami.int.thomsonreuters.com,*.sami.int.thomsonreuters.com"
        pullStrategy: PULL_ALWAYS
        pullTimeout: 300
        remoteFs: "/mnt/data"
        stopTimeout: 0
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  globalNodeProperties:
  - envVars:
      env:
      - key: "DOCKER_REGISTRY"
        value: "bams-aws.int.thomsonreuters.com:5001"
      - key: "HTTP_PROXY"
        value: "http://webproxy.lo5.corp.services:80"
      - key: "HTTPS_PROXY"
        value: "http://webproxy.lo5.corp.services:80"
      - key: "NO_PROXY"
        value: "localhost,127.0.0.1,*.thomsonreuters.com,nexus-tms,thomsonreuters.com,sami.int.thomsonreuters.com,*.sami.int.thomsonreuters.com"
  markupFormatter:
    rawHtml:
      disableSyntaxHighlighting: false
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 15
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  proxy:
    name: "webproxy.lo5.corp.services"
    noProxyHost: |-
      "*.int.thomsonreuters.com"
      "localhost"
      "127.0.0.1"
      "10.43.0.0/16"
      "172.16.0.1/16"
      "*.thomsonreuters.com"
      "*.refinitiv.com"
      "*.int.refinitiv.com"
      "*.sami.int.thomsonreuters.com"
    password: "{AQAAABAAAAAQJiTUBxrlLrkfnwA3mugVchIH+kl0afRfgzZYVHURUZg=}"
    port: 80
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    ldap:
      configurations:
      - groupSearchBase: "ou=groups"
        groupSearchFilter: "(&  (cn={0})(objectClass=group))"
        inhibitInferRootDN: false
        managerDN: "cn=s.tms.devopsldap,ou=Service Accounts,dc=lds,dc=thomsonreuters,dc=com"
        managerPasswordSecret: "{AQAAABAAAAAQqVNyd2s0Hh2vCDPqW98sWol3DjIktA4VDQlM6G8LOL4=}"
        rootDN: "dc=lds,dc=thomsonreuters,dc=com"
        server: "ldaps://lds.int.thomsonreuters.com:50001"
        userSearch: "sAMAccountName={0}"
      disableMailAddressResolver: false
      disableRolePrefixing: true
      groupIdStrategy: "caseInsensitive"
      userIdStrategy: "caseInsensitive"
  slaveAgentPort: 50000
  systemMessage: "For support, contact EIT DevOps team, clfhelpdesk@refinitiv.com"
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - sectioned:
      name: "AtlasRC"
  - sectioned:
      name: "CM-Well"
      sections:
      - listViewSection:
          alignment: CENTER
          name: "dwe"
          width: FULL
  - sectioned:
      name: "DIY-Classification"
      sections:
      - listViewSection:
          alignment: CENTER
          name: "PipeLine"
          width: FULL
      - listViewSection:
          alignment: CENTER
          name: "PKG Creation"
          width: FULL
  - sectioned:
      name: "DeployedTRIT"
  - sectioned:
      name: "DevOps"
      sections:
      - listViewSection:
          alignment: CENTER
          name: "DevOps Jobs"
          width: FULL
  - sectioned:
      name: "DevOps-Shared"
  - sectioned:
      name: "Manuscrip-Matcher"
  - sectioned:
      name: "Navalia-Docker-Images"
      sections:
      - listViewSection:
          alignment: CENTER
          name: "alpine"
          width: FULL
      - listViewSection:
          alignment: CENTER
          name: "dms"
          width: FULL
      - listViewSection:
          alignment: CENTER
          name: "infra-mgmt"
          width: FULL
      - listViewSection:
          alignment: CENTER
          name: "tools"
          width: FULL
      - listViewSection:
          alignment: CENTER
          name: "debian"
          width: FULL
  - sectioned:
      name: "OpenNebula"
      sections:
      - listViewSection:
          alignment: CENTER
          name: "DevOps Jobs"
          width: FULL
  - sectioned:
      name: "Reviewer-Finder"
  - sectioned:
      name: "Sluglines"
  - sectioned:
      name: "SupplyChain"
      sections:
      - listViewSection:
          alignment: CENTER
          width: FULL
  - sectioned:
      name: "TRIT-Hosted"
      sections:
      - listViewSection:
          alignment: CENTER
          name: "TRIT-Hosted-Rundeck-Prod-Deployment"
          width: FULL
      - listViewSection:
          alignment: CENTER
          name: "TRIT-Hosted-Rundeck-Util"
          width: FULL
      - listViewSection:
          alignment: CENTER
          name: "TRIT-Hosted-PipeLine-Jobs"
          width: FULL
  - sectioned:
      name: "TRIT-On-AWS"
      sections:
      - listViewSection:
          alignment: CENTER
          name: "TRIT-Helm-Charts"
          width: FULL
      - listViewSection:
          alignment: CENTER
          name: "TRIT-AWS-Jobs"
          width: FULL
  - sectioned:
      name: "TRIT-On-Azure"
      sections:
      - listViewSection:
          alignment: CENTER
          name: "Azure-Jobs"
          width: FULL
  - sectioned:
      name: "VM-Images"
  - all:
      name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  sSHD:
    port: -1
unclassified:
  ansiColorBuildWrapper:
    colorMaps:
    - black: "#000000"
      blackB: "#4C4C4C"
      blue: "#1E90FF"
      blueB: "#4682B4"
      cyan: "#00CDCD"
      cyanB: "#00FFFF"
      green: "#00CD00"
      greenB: "#00FF00"
      magenta: "#CD00CD"
      magentaB: "#FF00FF"
      name: "xterm"
      red: "#CD0000"
      redB: "#FF0000"
      white: "#E5E5E5"
      whiteB: "#FFFFFF"
      yellow: "#CDCD00"
      yellowB: "#FFFF00"
    - black: "#000000"
      blackB: "#555555"
      blue: "#0000AA"
      blueB: "#5555FF"
      cyan: "#00AAAA"
      cyanB: "#55FFFF"
      defaultBackground: 0
      defaultForeground: 7
      green: "#00AA00"
      greenB: "#55FF55"
      magenta: "#AA00AA"
      magentaB: "#FF55FF"
      name: "vga"
      red: "#AA0000"
      redB: "#FF5555"
      white: "#AAAAAA"
      whiteB: "#FFFFFF"
      yellow: "#AA5500"
      yellowB: "#FFFF55"
    - black: "black"
      blackB: "black"
      blue: "blue"
      blueB: "blue"
      cyan: "cyan"
      cyanB: "cyan"
      green: "green"
      greenB: "green"
      magenta: "magenta"
      magentaB: "magenta"
      name: "css"
      red: "red"
      redB: "red"
      white: "white"
      whiteB: "white"
      yellow: "yellow"
      yellowB: "yellow"
    - black: "#2E3436"
      blackB: "#2E3436"
      blue: "#3465A4"
      blueB: "#3465A4"
      cyan: "#06989A"
      cyanB: "#06989A"
      defaultBackground: 0
      defaultForeground: 7
      green: "#4E9A06"
      greenB: "#4E9A06"
      magenta: "#75507B"
      magentaB: "#75507B"
      name: "gnome-terminal"
      red: "#CC0000"
      redB: "#CC0000"
      white: "#D3D7CF"
      whiteB: "#D3D7CF"
      yellow: "#C4A000"
      yellowB: "#C4A000"
  appInsightsGlobalConfig:
    appInsightsEnabled: false
  artifactoryBuilder:
    artifactoryServers: |-
      FAILED TO EXPORT
      org.jfrog.hudson.ArtifactoryBuilder$DescriptorImpl#artifactoryServers: io.jenkins.plugins.casc.ConfiguratorException: Can't read attribute 'serverId' from org.jfrog.hudson.ArtifactoryServer@51720647
        at io.jenkins.plugins.casc.Attribute._getValue(Attribute.java:453)
        at io.jenkins.plugins.casc.Attribute.getValue(Attribute.java:227)
        at io.jenkins.plugins.casc.impl.configurators.DataBoundConfigurator.describe(DataBoundConfigurator.java:283)
        at io.jenkins.plugins.casc.Attribute._describe(Attribute.java:320)
        at io.jenkins.plugins.casc.Attribute.describe(Attribute.java:249)
        at io.jenkins.plugins.casc.Configurator.describe(Configurator.java:163)
        at io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.describe(GlobalConfigurationCategoryConfigurator.java:106)
        at io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.lambda$describe$3(GlobalConfigurationCategoryConfigurator.java:99)
        at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
        at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
        at java.util.Iterator.forEachRemaining(Iterator.java:116)
        at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
        at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
        at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
        at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
        at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
        at io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.describe(GlobalConfigurationCategoryConfigurator.java:99)
        at io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.describe(GlobalConfigurationCategoryConfigurator.java:30)
    useCredentialsPlugin: true
  bitbucketEndpointConfiguration:
    endpoints:
    - bitbucketCloudEndpoint:
        enableCache: false
        manageHooks: false
        repositoriesCacheDuration: 0
        teamCacheDuration: 0
  defaultFolderConfiguration:
    healthMetrics:
    - worstChildHealthMetric:
        recursive: true
  extendedEmailPublisher:
    adminRequiredForTemplateTesting: false
    allowUnregisteredEnabled: false
    allowedDomains: "@thomsonreuters.com,refinitiv.com,epam.com"
    charset: "UTF-8"
    debugMode: false
    defaultBody: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:\r\n\r\nCheck\
      \ console output at $BUILD_URL to view the results."
    defaultContentType: "text/plain"
    defaultRecipients: "$BUILD_USER"
    defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
    defaultSuffix: "thomsonreuters.com"
    maxAttachmentSize: -1
    maxAttachmentSizeMb: 0
    precedenceBulk: false
    smtpServer: "smtp.h.corp.services"
    useSsl: false
    watchingEnabled: false
  gitHubPluginConfig:
    hookUrl: "https://jenkins-eitops.int.refinitiv.com/github-webhook/"
  gitLabConnectionConfig:
    connections:
    - apiTokenId: "sami.git.token"
      clientBuilderId: "autodetect"
      connectionTimeout: 10
      ignoreCertificateErrors: false
      name: "sami.git"
      readTimeout: 10
      url: "https://git.sami.int.thomsonreuters.com"
  gitSCM:
    createAccountBasedOnEmail: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  globalConfigFiles:
    configs:
    - groovyScript:
        content: |+
          /*

              A common Gradle script to include for TMS Gradle scripts

          */


          import org.gradle.internal.os.OperatingSystem


          buildscript {
              repositories {
                  jcenter()
              }
              dependencies {
                  classpath 'nu.studer:gradle-credentials-plugin:1.0.1'
          //        classpath "at.bxm.gradleplugins:gradle-svntools-plugin:2.1"
                  classpath "de.undercouch:gradle-download-task:3.1.2"
              }
          }

          apply plugin: 'maven'
          apply plugin: 'maven-publish'
          //apply plugin: nu.studer.gradle.credentials.CredentialsPlugin
          //apply plugin: at.bxm.gradleplugins.svntools.SvnToolsPlugin
          //apply plugin: de.undercouch.gradle.tasks.download.DownloadTaskPlugin


          // Decrypt passwords
          String decryptedBamsRepositoryPassword = credentials.bamsRepositoryPassword
          String decryptedDevOpsRepositoryPassword = credentials.devopsRepositoryPassword
          String svnDecryptedPassword = credentials.svnPassword


          // TMS properties
          ext {

              runningViaJenkins = (System.getenv('BUILD_NUMBER') != null) ? true : false

              bamsPasswordSet = (System.getenv('BAMSPASS') != null) ? true : false

              repoPasswordSet = (System.getenv('REPOPASS') != null) ? true : false

              if (bamsPasswordSet) {
                  bamsPass = "$System.env.BAMSPASS"
              }
              else {
                  bamsPass = "$decryptedBamsRepositoryPassword"
              }

              if (repoPasswordSet) {
                  repoPass = "$System.env.REPOPASS"
              }
              else {
                  repoPass = "$decryptedDevOpsRepositoryPassword"
              }

              if (runningViaJenkins) {
                  repoBaseURL = "https://bams-aws.refinitiv.com/artifactory/default.maven.cloud/tmsdevops/tms-prod"
              }
              else {
                  repoBaseURL = "$project.buildDir/maven"
              }

              /*
              // determine the path to the binary repository based on OS
              if (runningViaJenkins) {
                  repoPath = jenkinsRepoPath
              } else if (OperatingSystem.current().isMacOsX()) {
                  repoPath = macRepoPath
              } else if (OperatingSystem.current().isLinux()) {
                  repoPath = jenkinsRepoPath
              } else if (OperatingSystem.current().isWindows()) {
                  repoPath = windowsRepoPath
              } else {
                  repoPath = jenkinsRepoPath
              }
              */

              // buildNum is always 1 if not running using Jenkins
              buildNum = runningViaJenkins ? System.getenv('BUILD_NUMBER') : '1'
          }


          /*
          svntools {
            username = "$svnUser"
            password = "$svnDecryptedPassword"
          }
          */


          /*
           * Todo: check how we can include publishing section in this file without having Gradle failing
           * with error "Cannot configure the 'publishing' extension after it has been accessed"
           *
          */

          publishing {

              repositories {
                  maven {
                      // set the credentials only if we publish to master repository
                      if (runningViaJenkins) {
                          credentials {
                                      username "$repoBaseUser"
                                      password "$decryptedDevOpsRepositoryPassword"
                          }
                      }
                      url "$repoBaseURL"
                  }
              }
          }


          // dump useful info for debugging
          task dumpInfo {
              doLast {
                  println OperatingSystem.current()
                  //println "BUILD_NUMBER: " + System.getenv('BUILD_NUM')
                  println "Jenkins: $runningViaJenkins"
                  println "buildNum: $buildNum"
                  println "Using repository: $repoBaseURL"
              }
          }

        id: "gradle-shared-common-1.0"
        name: "gradle-shared-common-1.0"
        providerId: "org.jenkinsci.plugins.configfiles.groovy.GroovyScript"
    - groovyScript:
        content: |
          /*
           * This build file was auto generated by running the Gradle 'init' task
           * by 'yaniv' at '1/12/17 10:02 PM' with Gradle 2.6
           *
           */

          /*
             Below peroperties need to be defined in the gradle.properies file:

             tmsproduct
             tmscomponent
             tmsversion
             tmsdevbuildnum
             tmsAppSourceRoot
             tmsAppSourceName

           */

          import org.gradle.internal.os.OperatingSystem








          buildscript {
              repositories {
                  jcenter()
              }
              dependencies {
                  //classpath 'com.palominolabs.gradle.task:gradle-git-clone-task:0.0.2'
                  classpath 'nu.studer:gradle-credentials-plugin:1.0.1'
                  //classpath "at.bxm.gradleplugins:gradle-svntools-plugin:2.1"
                  classpath "de.undercouch:gradle-download-task:3.1.2"
              }
          }


          //apply from: "$gradle_shared_common_script"
          //apply from: "gradle-shared-common-1.0.gradle"

          //apply plugin: nu.studer.gradle.credentials.CredentialsPlugin
          //apply plugin: at.bxm.gradleplugins.svntools.SvnToolsPlugin
          //apply plugin: de.undercouch.gradle.tasks.download.DownloadTaskPlugin



          // TMS properties
          ext {

              // Set the developer mode flag
              if (project.hasProperty('p_developerMode'))
                  p_developerMode = p_developerMode.toBoolean()
              else
                  p_developerMode = false

              // Set the continuous delivery flag
              if (project.hasProperty('p_continuousDelivery'))
                  p_continuousDelivery = p_continuousDelivery.toBoolean()
              else
                  p_continuousDelivery = false

              // get value of clf_version
              if (System.getenv('clf_version'))
              {
                  clf_version = System.getenv('clf_version')
              }
              else
                  clf_version = null


              // cleanup branch names
              if (System.getenv('clf_branch'))
              {
                  tmsdevbranch = System.getenv('clf_branch')
                  tmsdevbranch = tmsdevbranch.trim()
              }
              else
                  tmsdevbranch = 'nobranch'

              // fail if we have cont. delivery on, and no branch is defined
              if (p_continuousDelivery)
              {
                  if (tmsdevbranch == 'nobranch')
                  {
                      throw new GradleException('Missing branch name in clf_branch environment variable')
                  }
              }
              else
              {
                  // not in continuous delivery mode

                  if (clf_version == null)
                  {
                      throw new GradleException('Missing version in clf_version environment variable')
                  }
              }

              // location of package sources
              pkgSourceDir = "$projectDir/pkg"

              // location of where we assemble and arrange the files for outcome package
              packageAssemblyDir = "$project.buildDir/zip"

              // location where we create the package file during build process
              outputPackageDir = "$project.buildDir"

              // location of temporary directory
              tempDir = "$project.buildDir/temp"

              // set the application dev build number in case provided by Jenkins
              if (System.getenv('clf_devbuild'))
              {
                  println("Development build number taken from Jenkins")
                  tmsdevbuildnum = System.getenv('clf_devbuild')
              }
              else
                  println("Development build number taken from gradle.properties file")

              if (p_continuousDelivery)
              {
                  //cd_timestamp = new Date().format('yyMM')
                  //cd_buildnum = String.format('%04s',buildNum)
                  packageVersion = "$tmsdevbranch-$tmsdevbuildnum"
                  packageMajorVersion = packageVersion
              }
              else
              {
                  packageVersion = "$clf_version-$buildNum"
                  packageMajorVersion = clf_version

              }


              // Group is used for organizing the resulting package in the packages repository
              packageGroup = tmsgroup

              packageName = "^${tmsproduct}-^${tmscomponent}"

              // development repository base URL
              devRepositoryBaseURL = "http://wart/repository"

              // Location where QA puts tested builds
              QALegacyRepositoryDir = "/mnt/depnas/Dev_Builds_From_QA"

              // package filename
              packageFileName = "^${packageName}-^${packageVersion}.tar.gz"
          }


          // Gradle project's properties:
          version = "$packageVersion"
          description = tmsdescription


          configurations {
              schema
          }


          // In this section you declare the dependencies for your production and test code
          dependencies {

          }

          // dump useful info for debugging
          task dumpPackageInfo {
              doLast {
                  println "Development mode: " +  p_developerMode
                  println "Continuous delivery support: " +  p_continuousDelivery
                  println OperatingSystem.current()
                  println "Build invoked by Jenkins: $runningViaJenkins"
                  println "buildNum: $buildNum"
                  println "BUILD_NUM environment: " + System.getenv('BUILD_NUM')
                  println "packageName: $packageName"
                  println "package filename: $packageFileName"

                  println "version: $version"
                  println "group: $packageGroup"
                  println "major version: $packageMajorVersion"

                  println "pkgSourceDir $pkgSourceDir"
                  println "packageAssemblyDir $packageAssemblyDir"
                  println "outputPackageDir $outputPackageDir"
                  println "repoBasePath $repoBasePath"
              }
          }


          task deletePrevCommon (type:Exec){
                  commandLine "rm", "-rf", "$project.buildDir/export/package"
                  //commandLine "echo","hello1"
          }

          task deletePrevLibs (type:Exec){
              commandLine "rm", "-rf", "$project.buildDir/export/libs"
              //commandLine "echo","hello1"
          }

          task exportBuildInstallerCommon {
              description 'Pulls installer common scripts from git'
              dependsOn deletePrevCommon

              doLast {
                  exec {
                      commandLine "mkdir", "-p", "$project.buildDir/export"
                  }
                  exec {
                      if (!p_developerMode) {
                          commandLine "git", "clone", "git@git.sami.int.thomsonreuters.com:tmsops/package-tgz-common-pod.git","$project.buildDir/export/package"
                      }
                      else {
                          println "Copy from $p_developerRootFolder/package-tgz-common-pod"
                          println "copy to $project.buildDir/export/package"
                          commandLine "cp", "-r", "$p_developerRootFolder/package-tgz-common-pod", "$project.buildDir/export/package"
                      }
                  }
              }
          }


          task fetchFromSCM {
              dependsOn exportBuildInstallerCommon
          }


          task createWorkSpace(type: Exec) {
              println "Creating work Space"
              commandLine "sh","$project.buildDir/export/package/build-commons/scripts/create-workspace.sh",
                  "$pkgSourceDir",
                  "$packageAssemblyDir",
                  "$project.buildDir"

              // ensure that we run after all scripts were fetched from SCM
              mustRunAfter fetchFromSCM
          }




          task assemblePackage(type: Exec) {
              commandLine "sh","$project.buildDir/export/package/build-commons/scripts/assemble.sh",
                  "-t", "$tempDir",
                  "-r", "$project.buildDir",
                  "-u", "$devRepositoryBaseURL",
                  "-l", "$QALegacyRepositoryDir",
                  "-p", "$devPBuildBasePath",
                  "-b", "$bamsPass",
                  "-a", "$bamsUser",
                  "-q", "$repoPass",
                  "-e", "$repoBaseUser"

              // ensure that we run after workspace has been created
              mustRunAfter createWorkSpace
          }

          task pack(type: Exec) {
              commandLine "sh","$project.buildDir/export/package/build-commons/scripts/pack.sh",
                  "-s", "$packageAssemblyDir",
                  "-d", "$outputPackageDir",
                  "-f", "$packageFileName"

              // ensure that we run after copy and extract phase
              mustRunAfter assemblePackage
          }

          task createMetaFile() {

              doLast {
                println "$outputPackageDir"
                println "$packageFileName"
                new File("$outputPackageDir/^${packageFileName}.meta").text = "status=not_tested"
                 }

          //   ensure that we run after pack is created
            mustRunAfter pack

          }

          task copyToRepo(type: Exec) {
              commandLine "sh","$project.buildDir/export/package/build-commons/scripts/copy-to-repo.sh",
                  "-d", "$outputPackageDir",
                  "-f", "$packageFileName",
                  "-g", "$packageGroup",
                  "-a", "$packageName",
                  "-v", "$version",
                  "-e", "tar.gz",
                  "-m", "$packageMajorVersion",
                  "-r", "$repoBasePath",
                  "-u", "$repoBaseUser",
                  "-p", "$repoPass"

              // ensure that we run after copy and extract phase
              mustRunAfter createMetaFile
          }



          // Create package
          assemble {
              dependsOn fetchFromSCM
              dependsOn dumpInfo
              dependsOn createWorkSpace
              dependsOn assemblePackage
              dependsOn pack
              dependsOn createMetaFile
              if (runningViaJenkins) {
                  // copy the artifact to repository only if running via Jenkins
                  dependsOn copyToRepo
              }
          }


          publishing {
              publications {
                  tms_package(MavenPublication) {
                      artifactId = "$tmsproduct-$tmscomponent"
                      artifact file("$outputPackageDir")
                  }
              }
          }

          /*
          // Run tests
          task myTest(type:Exec) {
              commandLine 'sh', './tests/test.sh'
          }
          check.dependsOn myTest
          */
        id: "gradle-shared-package-1.0"
        name: "gradle-shared-package-1.0"
        providerId: "org.jenkinsci.plugins.configfiles.groovy.GroovyScript"
    - groovyScript:
        content: |-
          devopsRepositoryPassword=YoAtFVj/70KhYxh9tzJz+Q\=\=
          bamsRepositoryPassword=UouE1Z8mMdyKNdxYC4Egpg\=\=
          svnPassword=PqDA6VkJD3gllGsnXPrxIw\=\=
          gitPassword=cWFojiExMs6BNXx4ZtDZoCicC+/G7n/aHToWD9GMNyA\=
        id: "gradle.encrypted.properties"
        name: "gradle.encrypted.properties"
        providerId: "org.jenkinsci.plugins.configfiles.groovy.GroovyScript"
    - groovyScript:
        content: "# Proxy DTC Settings\nsystemProp.http.proxyHost=webproxy.lon.corp.services\n\
          systemProp.http.proxyPort=80\nsystemProp.https.proxyHost=webproxy.lon.corp.services\n\
          systemProp.https.proxyPort=80\nsystemProp.http.nonProxyHosts=localhost|127.0.0.1|10.43.0.0/16|172.16.0.1/16|*.thomsonreuters.com|*.refinitiv.com|*.int.refinitiv.com\n\
          systemProp.https.nonProxyHosts=localhost|127.0.0.1|10.43.0.0/16|172.16.0.1/16|*.thomsonreuters.com|*.refinitiv.com|*.int.refinitiv.com\n\
          \n# Development mode\n# set to true if you develop on your laptop\nprop_developerMode\
          \ = false\n\n# uncomment when running under developerMode, and set to your\
          \ local development directory\nprop_developerRootFolder = /Users/yaniv/Dev\n\
          \n# Repository to download artifacts created in the build process of dev\
          \ - aws bams\nbamsHost=https://bams-aws.int.thomsonreuters.com\nbamsUser=s.tmsdevops.bams\n\
          \n# Location of DevOPS repository for publishing packages\nrepoBasePath\
          \ = https://repo-dtc-nonprod-tmsops.int.thomsonreuters.com/\nrepoBaseUser\
          \ = tmsdevops\n\n\n# Location of builds from dev team\ndevDevBuildeBaseURL\
          \ = /mnt/depnas/Dev_Builds_From_QA\n\n# Path to pbuild mount\ndevPBuildBasePath\
          \ = /mnt/pbuild\n\n\n# SVN\nsvnHost=http://svn.clearforest.com\nsvnUser=builder\n\
          \n# Git\ngitHost=http://git.sami.int.thomsonreuters.com\ngitUser=s.tms.devopsgituser\n\
          \n\n# Shared Gradle scripts\n#gradle_shared_common_script=https://bams-aws.int.thomsonreuters.com/artifactory/default.maven.cloud/tmsdevops/tms-prod/tms/gradle/gradle-shared-common/v1/gradle-shared-common-1.0.gradle\n\
          #gradle_shared_package_script=https://bams-aws.int.thomsonreuters.com/artifactory/default.maven.cloud/tmsdevops/tms-prod/tms/gradle/gradle-shared-package/v1/gradle-shared-package-1.0.gradle\n\
          \  \n  \n  \n  \ngradle_shared_common_script=/home/jenkins/.gradle/gradle-shared-common-1.0\n\
          gradle_shared_package_script=/home/jenkins/.gradle/gradle-shared-package-1.0"
        id: "gradle.properties"
        name: "gradle.properties"
        providerId: "org.jenkinsci.plugins.configfiles.groovy.GroovyScript"
  ivyBuildTrigger:
    extendedVersionMatching: false
  location:
    adminAddress: "EIT-DevOps-JENKINS@REFINITIV.COM"
    url: "https://jenkins-eitops.int.refinitiv.com/"
  login-theme-plugin:
    header: |-
      TMS DevOps<br><br><br>
      <b>Login with TEN Domain Credentials</b>
    useDefaultTheme: true
  mailer:
    charset: "UTF-8"
    smtpHost: "smtp.h.corp.services"
    useSsl: false
    useTls: false
  mavenModuleSet:
    localRepository: "default"
  pollSCM:
    pollingThreadCount: 10
  prometheusConfiguration:
    collectingMetricsPeriodInSeconds: 120
    countAbortedBuilds: true
    countFailedBuilds: true
    countNotBuiltBuilds: true
    countSuccessfulBuilds: true
    countUnstableBuilds: true
    defaultNamespace: "default"
    fetchTestResults: true
    jobAttributeName: "jenkins_job"
    path: "metrics1"
    processingDisabledBuilds: false
    useAuthenticatedEndpoint: false
  remoteBuildConfiguration:
    remoteSites:
    - address: "http://pbuild.int.thomsonreuters.com/"
      auth2:
        CredentialsAuth:
          credentials: "jenkins-slave-ssh"
      displayName: "Dev Jenkins (pbuild)"
    - address: "https://eit.int.refinitiv.com/jenkins/"
      auth2:
        TokenAuth:
          apiToken: "{AQAAABAAAAAwkDkv8rMsAeKrYqBxwGixpl9pP9l1kDjw9/rCR6nMQcQlpe3omix46FJfvipzWcWqVafjD9AawY8Y+b4c76CvXg==}"
          userName: "s.tms.jenkins"
      displayName: "Dev & QA Jenkins (eit)"
  rundeckNotifier:
    rundeckBuilder: |-
      FAILED TO EXPORT
      org.jenkinsci.plugins.rundeck.RundeckNotifier$RundeckDescriptor#rundeckBuilder: No configurator found for type class org.jenkinsci.plugins.rundeck.RundeckInstanceBuilder
  simple-theme-plugin:
    elements: |-
      FAILED TO EXPORT
      org.codefirst.SimpleThemeDecorator#elements: io.jenkins.plugins.casc.ConfiguratorException: Can't read attribute 'url' from org.jenkinsci.plugins.simpletheme.CssTextThemeElement@6ff271ff
        at io.jenkins.plugins.casc.Attribute._getValue(Attribute.java:453)
        at io.jenkins.plugins.casc.Attribute.getValue(Attribute.java:227)
        at io.jenkins.plugins.casc.impl.configurators.DataBoundConfigurator.describe(DataBoundConfigurator.java:283)
        at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.lambda$convertToNode$de0cd4f8$1(HeteroDescribableConfigurator.java:283)
        at io.vavr.CheckedFunction0.lambda$unchecked$52349c75$1(CheckedFunction0.java:247)
        at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.convertToNode(HeteroDescribableConfigurator.java:283)
        at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.lambda$describe$5(HeteroDescribableConfigurator.java:107)
        at io.vavr.control.Option.map(Option.java:392)
        at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.describe(HeteroDescribableConfigurator.java:107)
        at io.jenkins.plugins.casc.impl.configurators.HeteroDescribableConfigurator.describe(HeteroDescribableConfigurator.java:55)
        at io.jenkins.plugins.casc.Attribute._describe(Attribute.java:320)
        at io.jenkins.plugins.casc.Attribute.describe(Attribute.java:249)
        at io.jenkins.plugins.casc.Configurator.describe(Configurator.java:163)
        at io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.describe(GlobalConfigurationCategoryConfigurator.java:106)
        at io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.lambda$describe$3(GlobalConfigurationCategoryConfigurator.java:99)
        at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
        at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
        at java.util.Iterator.forEachRemaining(Iterator.java:116)
        at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
        at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
        at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
        at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
        at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
        at io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.describe(GlobalConfigurationCategoryConfigurator.java:99)
        at io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.describe(GlobalConfigurationCategoryConfigurator.java:30)
  slackNotifier:
    baseUrl: "https://trtms.slack.com/services/hooks/jenkins-ci/"
    botUser: false
    room: "#jenkins-jobs"
    sendAsText: false
    teamDomain: "trtms.slack.com"
    tokenCredentialId: "slack.token"
  timestamperConfig:
    allPipelines: false
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
  violationsToGitLabGlobalConfiguration:
    apiTokenPrivate: false
    authMethodHeader: false
    ignoreCertificateErrors: false
    minSeverity: INFO
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  gradle:
    installations:
    - name: "gradle-5.4"
      properties:
      - installSource:
          installers:
          - gradleInstaller:
              id: "5.4"
